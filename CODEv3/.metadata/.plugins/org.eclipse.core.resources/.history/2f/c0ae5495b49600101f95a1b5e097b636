#ifndef HARDWARE_DRIVERS_H
#define HARDWARE_DRIVERS_H

#include "hal_data.h"
#include "eegTYPES.h"
#include "semaphoresGLOBAL.h"
#define ADS1263_CS_PIN       BSP_IO_PORT_04_PIN_09   /* P409 - SPI0_SSL0 */
#define ADS1263_SCLK_PIN     BSP_IO_PORT_04_PIN_10   /* P410 - SPI0_CK */
#define ADS1263_MOSI_PIN     BSP_IO_PORT_04_PIN_11   /* P411 - SPI0_MOSI */
#define ADS1263_MISO_PIN     BSP_IO_PORT_04_PIN_12   /* P412 - SPI0_MISO */
#define ADS1263_DRDY_PIN     BSP_IO_PORT_00_PIN_04   /* P004 - Pin A4 (IRQ0) */
#define ADS1263_RESET_PIN    BSP_IO_PORT_01_PIN_02   /* P102 - Hardware reset (optional) */
#define ADS1263_POWER_PIN    BSP_IO_PORT_01_PIN_03   /* P103 - Power control (optional) */
/* ✅ ADD: Forward declarations for μT-Kernel types */
#ifndef INT
typedef int INT;
#endif

/* EEG Acquisition Functions */
fsp_err_t eeg_acquisition_init(void);
fsp_err_t eeg_get_samples(eeg_raw_sample_t *samples, uint32_t count, uint32_t *samples_read);
void eeg_get_statistics(uint32_t *total_samples, uint32_t *error_count, bool *is_running);

/* ✅ FIXED: External interrupt callback - uses SDK type */
void ads1263_drdy_callback(external_irq_callback_args_t *p_args);

/* Session Control Functions */
fsp_err_t trigger_session_start(void);
fsp_err_t trigger_session_end(void);
fsp_err_t trigger_drowsiness_alert(void);
fsp_err_t trigger_system_ready(void);

/* Haptic Functions */
void task_haptic_feedback_entry(INT stacd, void *exinf);
fsp_err_t trigger_haptic_pattern(cognitive_state_type_t state);
fsp_err_t get_haptic_statistics(uint32_t *total_interventions, float *effectiveness, bool *is_active);

/* External semaphore declarations */
extern ID eeg_data_semaphore;
extern ID preprocessing_semaphore;
extern ID feature_extraction_semaphore;
extern ID classification_semaphore;
extern ID haptic_semaphore;

#endif /* HARDWARE_DRIVERS_H */
